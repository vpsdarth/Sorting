#include <stdio.h>
 void swap(int *a, int *b) {
    int temp = *a;
    *a = *b;
    *b = temp;
  }
  void heapify(int arr[], int n, int i) {
    // Find largest among root, left child and right child
    int largest = i;
    int left = 2 * i + 1;
    int right = 2 * i + 2;
    if (left < n && arr[left] > arr[largest])
      largest = left;
    if (right < n && arr[right] > arr[largest])
      largest = right;
    if (largest != i) {
      swap(&arr[i], &arr[largest]);
      heapify(arr, n, largest);
    }
  }
  void heapSort(int arr[], int n) {
    // Build max heap
    for (int i = n / 2 - 1; i >= 0; i--)
      heapify(arr, n, i);
    for (int i = n - 1; i >= 0; i--) {
      swap(&arr[0], &arr[i]);
      heapify(arr, i, 0);
    }
  }
  void printArray(int arr[], int n) {
    for (int i = 0; i < n; ++i)
      printf("%d ", arr[i]);
    printf("\n");
  }
int main() {
      int s;
      printf("Enter size");
      scanf("%d",&s);
    int arr[10];
    for (int i = 0; i < s; i++)
    {
      scanf("%d ",&arr[i]);
    }
    heapSort(arr, s); 
    printf("Sorted array is \n");
    printArray(arr, s);
  }
